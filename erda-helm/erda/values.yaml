global:
  namespace: erda-system
  size: demo
  image:
    repository: registry.erda.cloud/erda
    imagePullPolicy: IfNotPresent
  updateStrategy:
    type: RollingUpdate
  # Use this set to assign a list of default pullSecrets
  imagePullSecrets: [ ]


tags:
  work: false
  master: true

erda:
  clusterName: erda
  domain: erda.io
  masterCluster:
    domain:
    protocol:
  operator:
    tag: v1.1-f08d3a78-20210728
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
      limits:
        cpu: 100m
        memory: 128Mi
  image:
    components:
      init: init-image:1.0.0-20210510-21a3c66
      erda: erda:1.0.0-20210510-d7dd555
      erdaUI: erda-ui:1.0.0-20210508-f228247
      uc: erda-uc:1.0.0-20210425-d4c5a312
      telegraf: telegraf:1.0.0-20210510-dc02a9d
      analyzer:
        error: erda-analyzer-error-insight:1.0.0-20210422-69e9f84
        metrics: erda-analyzer-metrics:1.0.0-20210422-69e9f84
        alert: erda-analyzer-alert:1.0.0-20210422-69e9f84
      filebeat: filebeat:1.0.0-20210422-5b97371
      tmc: tmc:1.0.0-20210429-b87d98a
      soldier: soldier:1.0.0-20210426-daef74b
  clusterConfig:
    protocol: http
    clusterType: kubernetes
    ssh:
      user: root
      password: ""
    kubernetes:
      version:
      master:
      mastervip:
      lb:

volume-provisioner:
  tag: 1.0.0-20210416-1a3758f
  provisioner:
    local:
      hostpath: /data
    nfs:
      hostpath: /netdata
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
    limits:
      cpu: 100m
      memory: 256Mi

registry:
  # registry 镜像 tag (版本)
  tag: 2.7.1
  # registry 节点存储容量
  capacity: 100Gi
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "1Gi"
  networkMode: ""
  hostURL: ""
  hostNode:

sonar:
  # sonar 镜像 tag (版本)
  tag: 8.4.2
  token: LY9DepZ7iDUsyH8TFoDR85ok7y2nw1
  password: 78tE846484lQQFUwY51h0Yr96ZQ063
  # ingressHost: "sonar.${ERDA_GENERIC_DOMAIN}"
  ingressHost: "sonar.erda.io"
  resources:
    requests:
      cpu: "750m"
      memory: "1536Mi"
    limits:
      cpu: "1500m"
      memory: "3Gi"

kms:
  # kms 镜像 tag (版本)
  tag: 1.0.0-20200608-f11445f
  replicas:
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"

nexus:
  defaultAddress: https://maven.aliyun.com/repository/public
  custom:
    address:
    username:
    password:

redis:
  # redisOperator 组件配置
  redisOperator:
    # registry 镜像 tag (版本)
    tag: 1.0.0-20200723-1a7a9f14
    resources:
      requests:
        cpu: "10m"
        memory: "50Mi"
      limits:
        cpu: "100m"
        memory: "50Mi"

  # redisFailover 组件配置
  redisFailover:
    tag: 3.2.12
    secret: iEVII6LY6Ebrc4HX
    # redis 实例配置
    redis:
      replicas: 2
      resources:
        requests:
          cpu: "150m"
          memory: "1Gi"
        limits:
          cpu: "300m"
          memory: "2Gi"
    # redis sentinel 配置
    sentinel:
      replicas: 3
      resources:
        requests:
          cpu: "50m"
          memory: "64Mi"
        limits:
          cpu: "200m"
          memory: "128Mi"

kafka:
  # kafka 镜像 tag (版本)
  tag: 1.1.0-20210323-be01a9b
  # kafka 节点存储容量
  capacity: 100Gi
  resources:
    requests:
      cpu: "2"
      memory: "8Gi"
    limits:
      cpu: "3"
      memory: "12Gi"
  java:
    # 单个 kafka 实例设置的 Java heap 大小(单位 Mb)
    heapmemory: "2048"


cassandra:
  # cassandra-operator 镜像 tag (版本)
  operatorImageTag: v1.1.3-release
  # addon-cassandra 镜像 tag (版本)
  cassandraImageTag: 3.11.10
  # cassandra 节点存储容量
  capacity: 1000Gi
  resources:
    requests:
      cpu: "6"
      memory: "24Gi"
    limits:
      cpu: "12"
      memory: "48Gi"
  # 机架列表，cassandra 部署时按机架分布以提高高可用性
  racks:
    # 每个 rack 的名称, rack 的数量决定了高可用部署时 cassandra 实例的副本数量
    - name: rack1
    - name: rack2
    - name: rack3

elasticsearch:
  # elasticsearch 镜像 tag (版本)
  tag: 6.2.4
  # 高可用部署时默认副本数量
  replicas: 3
  # 高可用部署时可作为 master 的节点的数量（设置为至少集群节点数量/2 + 1）
  numberOfMasters: 2
  # elasticsearh 节点存储容量
  capacity: 1000Gi
  resources:
    requests:
      cpu: "4"
      memory: "16Gi"
    limits:
      cpu: "6"
      memory: "24Gi"

mysql:
  # mysql 镜像 tag (版本)
  tag: 5.7.34
  # 数据库访问 用户名
  user: erda
  # 数据库访问 目标数据库
  database: erda
  # 数据库访问 密码
  password: password
  # mysql 节点存储容量
  capacity: 100Gi
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "2"
      memory: "2Gi"
  custom:
    address:
    port:
    database:
    user:
    password:


zookeeper:
  # zookeeper 镜像 tag (版本)
  tag: 3.4.13-monitor
  # zookeeper 节点存储容量
  capacity: 32Gi
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "1"
      memory: "512Mi"

etcd:
  # etcd 镜像 tag (版本)
  tag: 3.3.15-0
  # etcd 节点存储容量
  capacity: 32Gi
  resources:
    requests:
      cpu: "100m"
      memory: "1Gi"
    limits:
      cpu: "4"
      memory: "16Gi"
