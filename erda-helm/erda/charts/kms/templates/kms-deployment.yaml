apiVersion: apps/v1
kind: Deployment
metadata:
  name: erda-kms
  namespace: {{ .Values.global.namespace | default "erda-system" }}
  labels:
    app.kubernetes.io/name: kms
spec:
  {{- if eq .Values.global.size "prod" }}
  replicas: {{ .Values.replicas | default 2 }}
  {{- else  }}
  replicas: {{ .Values.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kms
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kms
    spec:
      tolerations:
        - operator: Exists
      {{- if .Values.nodematchExpressions }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range $_, $value := .Values.nodematchExpressions }}
                  - key: {{ $value.key }}
                    operator: {{ $value.operator }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - kms
                topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: kms
          image: {{ .Values.global.image.repository }}/addon-kms:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
            - containerPort: 3082
          env:
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  key: ETCD_ENDPOINTS
                  name: dice-cluster-info
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "0.1" | quote }}
              memory: {{ .Values.resources.requests.memory | default "10Mi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "0.5" | quote }}
              memory: {{ .Values.resources.limits.memory | default "500Mi" | quote }}
          livenessProbe:
            failureThreshold: 9
            initialDelaySeconds: 1
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: 3082
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /certs/
              name: etcd-client-secret
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: etcd-client-secret
          secret:
            secretName: etcd-client-secret