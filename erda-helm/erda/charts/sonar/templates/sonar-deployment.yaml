kind: Deployment
apiVersion: apps/v1
metadata:
  name: erda-sonar
  namespace: {{ .Values.global.namespace | default "erda-system" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      dice/addon: erda-sonar
  template:
    metadata:
      labels:
        dice/addon: erda-sonar
    spec:
      containers:
      - name: erda-sonar
        image:  {{ .Values.global.image.repository }}/addon-sonar:{{ .Values.tag }}
        imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
        ports:
        - containerPort: 9000
          protocol: TCP
        env:
        - name: SONAR_ADMIN_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: SONAR_ADMIN_PASSWORD
              name: erda-sonar
        - name: SONAR_ADMIN_TOKEN
          valueFrom:
            configMapKeyRef:
              key: SONAR_ADMIN_TOKEN
              name: erda-sonar
        - name: DICE_ADDON
          value: erda-sonar
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu | default "0.1" | quote }}
            memory: {{ .Values.resources.requests.memory | default "10Mi" | quote }}
          limits:
            cpu: {{ .Values.resources.limits.cpu |  default "1.5" | quote }}
            memory: {{ .Values.resources.limits.memory | default "3Gi" | quote }}
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 1
          timeoutSeconds: 10
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 9
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodematchExpressions }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                {{- range $_, $value := .Values.nodematchExpressions }}
                  - key: {{ $value.key }}
                    operator: {{ $value.operator }}
                {{- end }}
      {{- end }}
      tolerations:
      - operator: Exists
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
