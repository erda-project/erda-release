apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: erda-mysql
  name: erda-mysql
  namespace: {{ .Values.global.namespace | default "erda-system" }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: erda-mysql
  serviceName: erda-mysql
  template:
    metadata:
      labels:
        app: erda-mysql
    spec:
      tolerations:
        - operator: Exists
      containers:
        - name: erda-mysql
          image: {{ .Values.global.image.repository }}/erda-mysql:{{ .Values.tag }}
          imagePullPolicy: IfNotPresent
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.password }}
          - name: MYSQL_DATABASE
            value: {{ .Values.database }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "0.1" | quote }}
              memory: {{ .Values.resources.requests.memory | default "100Mi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "2" | quote }}
              memory: {{ .Values.resources.limits.memory | default "2Gi" | quote }}
          ports:
          - containerPort: 3306
            name: mysql
          volumeMounts:
          - name: erda-mysql
            mountPath: /data/mysql
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: erda-mysql
      name: erda-mysql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.capacity | default "100Gi" }}
      storageClassName: {{ .Values.global.storageClassName | default "dice-local-volume" }}
      volumeMode: Filesystem
