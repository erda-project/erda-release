apiVersion: apps/v1
kind: Deployment
metadata:
  name: erda-kms
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: erda-kms
spec:
  {{- if eq .Values.global.size "prod" }}
  replicas: {{ .Values.replicas | default 2 }}
  {{- else  }}
  replicas: {{ .Values.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: erda-kms
  template:
    metadata:
      labels:
        app.kubernetes.io/name: erda-kms
    spec:
      tolerations:
        - operator: Exists
      {{- if .Values.nodematchExpressions }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range $_, $value := .Values.nodematchExpressions }}
                  - key: {{ $value.key }}
                    operator: {{ $value.operator }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - erda-kms
                topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: erda-etcd-healthy
          image: {{ .Values.global.image.repository }}/addon-kms:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          {{- if eq .Values.global.size "demo" }}
          command: [ "sh", "-c", "curl --cacert /certs/etcd-ca.pem --cert /certs/etcd-client.pem --key /certs/etcd-client-key.pem --connect-timeout 3 --retry 10 --retry-delay 5 https://erda-etcd.{{ .Release.Namespace }}.svc.cluster.local:2379/health" ]
          {{- else }}
          command: [ "sh", "-c", "curl --cacert /certs/etcd-ca.pem --cert /certs/etcd-client.pem --key /certs/etcd-client-key.pem --connect-timeout 3 --retry 10 --retry-delay 5 https://erda-etcd-0.{{ .Release.Namespace }}.svc.cluster.local:2379/health" ]
          {{- end }}
          volumeMounts:
            - mountPath: /certs/
              name: etcd-client-secret
              readOnly: true
      containers:
        - name: erda-kms
          image: {{ .Values.global.image.repository }}/addon-kms:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
            - containerPort: 3082
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  key: ETCD_ENDPOINTS
                  name: dice-cluster-info
          resources:
            {{- if eq .Values.global.size "demo" }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "100m" | quote }}
              memory: {{ .Values.resources.requests.memory | default "256Mi" }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | default "500m" | quote }}
              memory: {{ .Values.resources.limits.memory | default "1024Mi" }}
            {{- else }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "500m" | quote }}
              memory: {{ .Values.resources.requests.memory | default "1Gi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "1" | quote }}
              memory: {{ .Values.resources.limits.memory | default "2Gi" | quote }}
            {{- end }}
          livenessProbe:
            failureThreshold: 9
            initialDelaySeconds: 1
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: 3082
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /certs/
              name: etcd-client-secret
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: etcd-client-secret
          secret:
            secretName: erda-etcd-client-secret
