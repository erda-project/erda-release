apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    dice/addon: erda-registry
  name: erda-registry
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      dice/addon: erda-registry
  serviceName: erda-registry
  template:
    metadata:
      labels:
        dice/addon: erda-registry
    spec:
      tolerations:
        - operator: Exists
      containers:
        - name: erda-registry
          image: {{ .Values.global.image.repository }}/addon-registry:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
              name: port-5000
            - containerPort: 5050
              protocol: TCP
              name: port-5050
          env:
            - name: DICE_ADDON
              value: erda-registry
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: 'true'
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
          resources:
            {{- if eq .Values.global.size "demo" }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "100m" | quote }}
              memory: {{ .Values.resources.requests.memory | default "256Mi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "500m" | quote }}
              memory: {{ .Values.resources.limits.memory | default "512Mi" | quote }}
            {{- else }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "0.5" | quote }}
              memory: {{ .Values.resources.requests.memory | default "512Mi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "1" | quote }}
              memory: {{ .Values.resources.limits.memory | default "1Gi" | quote }}
            {{- end }}
          volumeMounts:
            - name: erda-registry
              mountPath: /var/lib/registry
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 9
      {{- if .Values.custom.nodeName }}
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values: [{{ .Values.custom.nodeName }}]
      {{- end }}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        labels:
          dice/addon: erda-registry
        name: erda-registry
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            {{- if eq .Values.global.size "demo" }}
            storage: {{ .Values.capacity | default "50Gi" }}
            {{- else }}
            storage: {{ .Values.capacity | default "1000Gi" }}
            {{- end }}
        storageClassName: {{ .Values.storageClassName | default "dice-local-volume" }}
        volumeMode: Filesystem
