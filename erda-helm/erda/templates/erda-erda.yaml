apiVersion: dice.terminus.io/v1beta1
kind: Dice
metadata:
  name: dice
  namespace: {{ .Values.global.namespace | default "erda-system" }}
spec:
  {{- if not .Values.tags.work }}
  customDomain:
    openapi: openapi.{{ .Values.erda.domain }}
    ui: {{ .Values.erda.domain }}, *.{{ .Values.erda.domain }}
  {{- else }}
  mainPlatform:
    collector: {{ .Values.erda.masterCluster.protocol }}://collector.{{ .Values.erda.masterCluster.domain }}
    openapi: {{ .Values.erda.masterCluster.protocol }}://openapi.{{ .Values.erda.masterCluster.domain }}
    cluster-dialer: {{ .Values.erda.masterCluster.protocol }}://cluster-dialer.{{ .Values.erda.masterCluster.domain }}
  {{- end }}
  cookieDomain: {{ .Values.erda.domain }}
  platformDomain: {{ .Values.erda.domain }}
  diceCluster: {{ .Values.erda.clusterName }}
  size: 'test'
  initJobs:
    version: "2.0"
    jobs:
      init-image:
        envs:
          TZ: Asia/Shanghai
          {{- if .Values.mysql.custom.address }}
          MIGRATION_MYSQL_HOST: {{ .Values.mysql.custom.address }}
          MIGRATION_MYSQL_PORT: "{{ .Values.mysql.custom.port }}"
          MIGRATION_MYSQL_USERNAME: {{ .Values.mysql.custom.user }}
          MIGRATION_MYSQL_PASSWORD: {{ .Values.mysql.custom.password }}
          MIGRATION_MYSQL_DBNAME: {{ .Values.mysql.custom.database }}
          {{- else }}
          MIGRATION_MYSQL_HOST: erda-mysql.{{ .Values.global.namespace | default "erda-system"}}.svc.cluster.local
          MIGRATION_MYSQL_PORT: "3306"
          MIGRATION_MYSQL_USERNAME:  {{ .Values.mysql.user }}
          MIGRATION_MYSQL_PASSWORD: {{ .Values.mysql.password }}
          MIGRATION_MYSQL_DBNAME: {{ .Values.mysql.database }}
          {{- end }}
          MIGRATION_DEBUGSQL: "false"
          MIGRATION_ERDA_LINT: "true"
        image: registry.erda.cloud/erda/init-image:20210730-ca1833c
        resources:
          cpu: 0.5
          mem: 128


  dice:
    version: "2.0"
    meta:
      ERDA_COMPONENT: ""
    envs:
      COLLECTOR_ADDR: collector:7076
      ETCDCTL_API: "3"
      MONITOR_ADDR: monitor:7096
    services:
      {{- if not .Values.tags.work }}
      action-runner-scheduler:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/action-runner-scheduler
        ports:
          - port: 9500
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.3
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        health_check:
          http:
            port: 9500
            path: /healthz
            duration: 120
          exec: { }
      admin:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/admin
        ports:
          - port: 9095
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.2
          max_mem: 256
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 9095
            path: /api/healthy
            duration: 120
          exec: { }
      cluster-dialer:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/cluster-dialer
        ports:
          - port: 80
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 2
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        expose:
          - 80
        health_check:
          http: { }
          exec: { }
      cluster-manager:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/cluster-manager
        ports:
          - port: 9094
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.2
          max_mem: 256
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http: { }
          exec: { }
      cmp:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/cmp
        ports:
          - port: 9027
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          ERDA_HELM_CHART_VERSION: 1.1.0
          ERDA_NAMESPACE: default
          UC_CLIENT_ID: dice
          UC_CLIENT_SECRET: secret
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.2
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http: { }
          exec: { }
      collector:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/collector
        ports:
          - port: 7076
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
          - port: 7098
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          COLLECTOR_BROWSER_SAMPLING_RATE: "100"
          COLLECTOR_ENABLE: "true"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 1024
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        expose:
          - 7076
        health_check:
          http:
            port: 7076
            path: /api/health
            duration: 120
          exec: { }
      core-services:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/core-services
        ports:
          - port: 9526
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          AVATAR_STORAGE_URL: file:///avatars
          CMDB_CONTAINER_TOPIC: spot-metaserver_container
          CMDB_GROUP: spot_cmdb_group
          CMDB_HOST_TOPIC: spot-metaserver_host
          CREATE_ORG_ENABLED: "true"
          DEBUG: "false"
          LICENSE_KEY: XWoPm8I3FZuDclhuOhZ+qRPVHjXKCwSgZEOTyrMgtJg6f0Kz7QR0CyVN1ZWgbiou/OyABe7HyK1yVxDdeP1JuXcfOoGOdChTyiQfP5sdXUbferq5UkK7S44lMjNmzURlbdX8smSa13+8FQyDqz2BpDcBKMRfn2kKuF4n6n9Ls7HyVV7oWSKreEyIH3991Ug2grNEpcKip3ISVY7eGJ3uoahC9zs4fla1dzR47e5dgppHtf5WBjFgiSS+5qRi2mYa
          LISTEN_ADDR: :9526
          UC_CLIENT_ID: dice
          UC_CLIENT_SECRET: secret
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.3
          max_mem: 512
          network:
            mode: container
        binds:
          - /netdata/avatars:/avatars:rw
          - /netdata/dice/cmdb/files:/files:rw
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 9526
            path: /_api/health
            duration: 120
          exec: { }
      dicehub:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/dicehub
        ports:
          - port: 10000
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          EXTENSION_MENU: '{"流水线任务":["source_code_management:代码管理","build_management:构建管理","deploy_management:部署管理","version_management:版本管理","test_management:测试管理","data_management:数据治理","custom_task:自定义任务"],"扩展服务":["database:存储","distributed_cooperation:分布式协作","search:搜索","message:消息","content_management:内容管理","security:安全","traffic_load:流量负载","monitoring&logging:监控&日志","content:文本处理","image_processing:图像处理","document_processing:文件处理","sound_processing:音频处理","custom:自定义","general_ability:通用能力","new_retail:新零售能力","srm:采供能力","solution:解决方案"]}'
          RELEASE_GC_SWITCH: "true"
          RELEASE_MAX_TIME_RESERVED: "72"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.15
          max_mem: 1024
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 10000
            path: /healthz
            duration: 120
          exec: { }
      dop:
        image: registry.cn-shanghai.aliyuncs.com/viper/dop:v1.1
        cmd: /app/dop
        ports:
          - port: 9527
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "true"
          MONITOR_ADDR: monitor:7096
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        health_check:
          http:
            port: 9527
            path: /_api/health
            duration: 120
          exec: { }
      ecp:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/ecp
        ports:
          - port: 9029
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.2
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http: { }
          exec: { }
      eventbox:
        image: {{ .Values.global.image.repository }}/erda:4.0-20210521-3a995ee
        cmd: /app/eventbox
        ports:
          - port: 9528
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 2
          max_mem: 2560
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 9528
            path: /api/dice/eventbox/version
            duration: 120
          exec: { }
      gittar:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/gittar
        ports:
          - port: 5566
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          GIT_INNER_USER_NAME: "18000000000"
          GIT_INNER_USER_PASSWORD: "123456"
          GITTAR_BRANCH_FILTER: master,develop,feature/*,support/*,release/*,hotfix/*
          GITTAR_PORT: "5566"
          UC_CLIENT_ID: dice
          UC_CLIENT_SECRET: secret
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 1536
          network:
            mode: container
        binds:
          - /netdata/gittar:/repository:rw
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        expose:
          - 5566
        health_check:
          http: { }
          exec: { }
      hepa:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/hepa
        ports:
          - port: 8080
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        resources:
          cpu: 0.1
          mem: 512
          max_cpu: 0.5
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: addons
        expose:
          - 8080
        health_check:
          http:
            port: 8080
            path: /api/gateway/health/check
            duration: 120
          exec: { }
      monitor:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/monitor
        ports:
          - port: 7096
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 7098
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 7080
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 512
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        health_check:
          http:
            port: 7096
            path: /api/health
            duration: 120
          exec: { }
      msp:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/msp
        ports:
          - port: 8080
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 7080
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 9080
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          GOLANG_PROTOBUF_REGISTRATION_CONFLICT: ignore
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 512
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: msp
        health_check:
          http:
            port: 8080
            path: /health
            duration: 120
          exec: { }
      openapi:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/openapi
        ports:
          - port: 9529
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          CREATE_ORG_ENABLED: "true"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.5
          max_mem: 512
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        expose:
          - 9529
        health_check:
          http:
            port: 9529
            path: /api/openapi/version
            duration: 120
          exec: { }
      orchestrator:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/orchestrator
        ports:
          - port: 8081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
          MSP_ADDR: msp:8080
          TENANT_GROUP_KEY: 58dcbf490ef3
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 256
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 8081
            path: /info
            duration: 120
          exec: { }
      pipeline:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/pipeline
        ports:
          - port: 3081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
          GIT_INNER_USER_NAME: "18000000000"
          GIT_INNER_USER_PASSWORD: "123456"
          PIPELINE_STORAGE_URL: file:///devops/storage
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 1536
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        health_check:
          http:
            port: 3081
            path: /ping
            duration: 120
          exec: { }
      scheduler:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/scheduler
        ports:
          - port: 9091
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CMDB_CONTAINER_TOPIC: spot-metaserver_container
          CMDB_GROUP: spot_cmdb_group2
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 9091
            path: /info
            duration: 120
          exec: { }
      streaming:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/streaming
        ports:
          - port: 7091
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 7098
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          BROWSER_ENABLE: "true"
          BROWSER_GROUP_ID: spot-monitor-browser
          LOG_GROUP_ID: spot-monitor-log
          LOG_STORE_ENABLE: "true"
          LOG_TTL: 168h
          METRIC_ENABLE: "true"
          METRIC_GROUP_ID: spot-monitor-metrics
          METRIC_INDEX_TTL: 192h
          TRACE_ENABLE: "true"
          TRACE_GROUP_ID: spot-monitor-trace
          TRACE_TTL: 168h
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1.5
          max_mem: 1024
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        health_check:
          http:
            port: 7091
            path: /api/health
            duration: 120
          exec: { }
      uc-adaptor:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/uc-adaptor
        ports:
          - port: 12580
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          DEBUG: "false"
          LISTEN_ADDR: :12580
          UC_AUDITOR_CRON: 0 */1 * * * ?
          UC_AUDITOR_PULL_SIZE: "30"
          UC_CLIENT_ID: dice
          UC_CLIENT_SECRET: secret
        resources:
          cpu: 0.1
          mem: 64
          max_cpu: 0.2
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        expose:
          - 12580
        health_check:
          http:
            port: 12580
            path: /healthy
            duration: 120
          exec: { }
      {{- end }}
      cluster-agent:
        image: registry.erda.cloud/erda/erda:1.1-20210801-b21ed4e
        cmd: /app/cluster-agent
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 1024
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http: { }
          exec:
            cmd: ls
    addons: { }
    values: { }

  {{- if not .Values.tags.work }}
  diceUI:
    version: "2.0"
    meta:
      ERDA_COMPONENT: ""
    envs: { }
    services:
      ui:
        image: registry.erda.cloud/erda/ui-ce:1.1-20210801-4d7018ba6a91ad4d334b7a23caf0889cc240f4ea
        ports:
          - port: 80
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          COLLECTOR_ADDR: collector:7076
          COLLECTOR_PUBLIC_ADDR: collector:7076
          ENABLE_BIGDATA: "false"
          FDP_UI_ADDR: baidu.com
          GITTAR_ADDR: gittar:5566
          KRATOS_ADDR: kratos:4433
          KRATOS_PRIVATE_ADDR: kratos:4434
          OPENAPI_ADDR: openapi:9529
          SCHEDULER_ADDR: scheduler:9091
          TA_ENABLE: "true"
          TERMINUS_KEY: c891011d-6115-11e9-9fe6-6c92bf3144c3
          UC_ADDR: uc:8080
          UC_PUBLIC_URL: ""
        resources:
          cpu: 0.2
          mem: 256
          max_cpu: 1
          max_mem: 512
          network:
            mode: container
        deployments:
          replicas: 1
        expose:
          - 80
        health_check:
          http:
            port: 80
            path: /
            duration: 120
          exec: { }
    addons: { }
    values: { }
  spotAnalyzer:
    version: "2"
    meta:
      ERDA_COMPONENT: ""
    envs:
      AKKA_ASK_TIMEOUT: 60s
      AKKA_FRAMESIZE: 268435456b
      AKKA_LOOKUP_TIMEOUT: 60s
      AKKA_TCP_TIMEOUT: 60s
      ANALYZER_ALERT_ADDR: analyzer-alert:8081
      ANALYZER_ERROR_INSIGHT_ADDR: analyzer-error-insight:8081
      ANALYZER_METRICS_ADDR: analyzer-metrics:8081
      CMDB_ADDR: cmdb:9093
      EVENTBOX_ADDR: eventbox:9528
      FLINK_ENV_JAVA_OPTS_TM: -XX:+UseG1GC -XX:MaxMetaspaceSize=268435456
      HEARTBEAT_TIMEOUT: "60000"
      JOB_MANAGER_HEAP_SIZE: 700m
      MONITOR_ADDR: monitor:7096
      PARALLELISM_DEFAULT: "2"
      RESOURCEMANAGER_JOB_TIMEOUT: 10minutes
      RESOURCEMANAGER_TASKMANAGER_TIMEOUT: "30000"
      TASK_MANAGER_MEM_PREALLOCATION: "true"
      TASK_MANAGER_MEMORY_MANAGED_FRACTION: "0"
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: "2"
    services:
      analyzer-alert:
        image: registry.erda.cloud/erda/erda-analyzer-alert:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.alert.Main
        ports:
          - port: 8081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6123
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6124
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          GROUP_ID: spot-analyzer-alert
          JOB_MANAGER_NAME: self
          SELF_ADDR: analyzer-alert:8081
          STATE_BACKEND_ROCKSDB_LOCALDIR: /tmp/rocksdb
          STREAM_CHECKPOINT_ENABLE: "true"
          STREAM_CHECKPOINT_INTERVAL: "120000"
          STREAM_PARALLELISM_INPUT: "2"
          STREAM_PARALLELISM_OPERATOR: "2"
          STREAM_PARALLELISM_OUTPUT: "2"
          STREAM_STATE_BACKEND: jobmanager
          STREAM_STATE_BACKEND_FS_PATH: file:///data/checkpoints
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/alert:/data:rw
        deployments:
          replicas: 1
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: { }
      analyzer-alert-task:
        image: registry.erda.cloud/erda/erda-analyzer-alert:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh taskmanager
        ports:
          - port: 6121
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6122
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          JOB_MANAGER_NAME: analyzer_alert
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/alert:/data:rw
        deployments:
          replicas: 1
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
      analyzer-error-insight:
        image: registry.erda.cloud/erda/erda-analyzer-error-insight:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.errorInsight.Main
        ports:
          - port: 8081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6123
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6124
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CASSANDRA_BATCHSIZE: "10"
          GROUP_ID: spot-analyzer-error-insight
          JOB_MANAGER_NAME: self
          SELF_ADDR: analyzer-error-insight:8081
          STREAM_PARALLELISM_INPUT: "2"
          STREAM_PARALLELISM_OPERATOR: "2"
          STREAM_PARALLELISM_OUTPUT: "2"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/error-insight:/data:rw
        deployments:
          replicas: 1
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: { }
      analyzer-error-insight-task:
        image: registry.erda.cloud/erda/erda-analyzer-error-insight:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh taskmanager
        ports:
          - port: 6121
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6122
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          JOB_MANAGER_NAME: analyzer_error_insight
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/error-insight:/data:rw
        deployments:
          replicas: 1
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
      analyzer-metrics:
        image: registry.erda.cloud/erda/erda-analyzer-metrics:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.metrics.Main
        ports:
          - port: 8081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6123
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6124
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          GROUP_ID: spot-analyzer-metrics
          JOB_MANAGER_NAME: self
          PARALLELISM_DEFAULT: "4"
          SELF_ADDR: analyzer-metrics:8081
          STATE_BACKEND_ROCKSDB_LOCALDIR: /tmp/rocksdb
          STREAM_CHECKPOINT_ENABLE: "false"
          STREAM_CHECKPOINT_INTERVAL: "120000"
          STREAM_PARALLELISM_INPUT: "4"
          STREAM_PARALLELISM_OPERATOR: "4"
          STREAM_PARALLELISM_OUTPUT: "4"
          STREAM_STATE_BACKEND: jobmanager
          STREAM_STATE_BACKEND_FS_PATH: file:///data/checkpoints
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/metrics:/data:rw
        deployments:
          replicas: 1
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: { }
      analyzer-metrics-task:
        image: registry.erda.cloud/erda/erda-analyzer-metrics:1.1.0-20210801-a274c27
        cmd: flink-entrypoint.sh taskmanager
        ports:
          - port: 6121
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6122
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6125
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          JOB_MANAGER_NAME: analyzer_metrics
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/metrics:/data:rw
        deployments:
          replicas: 2
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
    addons: { }
    values: { }
  uc:
    version: "2.0"
    meta:
      ERDA_COMPONENT: ""
    envs: { }
    services:
      uc:
        image: registry.erda.cloud/erda/uc:dice-4.0-20210630-f4d63b99
        ports:
          - port: 8080
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          REDIRECT_URL_WHITE_LIST: http://uc.{{ .Values.erda.domain }}/oauth/authorize,http://uc.{{ .Values.erda.domain }}/oauth/authorize,https://uc.{{ .Values.erda.domain }}/oauth/authorize
          SPRING_PROFILES_ACTIVE: docker
          SMS_ENABLE_NOTICE_MOCK: "false"
          JAVA_OPTS: -Xms1433m -Xmx1433m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 8080
            path: /health
            duration: 300
        expose:
          - 8080
    addons: { }
  spotMonitor:
  {{- end }}

  spotTelegraf:
    version: "2"
    meta:
      ERDA_COMPONENT: ""
    envs: { }
    services:
      telegraf:
        image: registry.erda.cloud/erda/terminus/telegraf:4.0-20210801-ee49757
        ports:
          - port: 8090
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          HOST_ETC: /rootfs/etc
          HOST_MOUNT_PREFIX: /rootfs
          HOST_PROC: /rootfs/proc
          HOST_SYS: /rootfs/sys
          HPROF_OUTPUT_PATH: /rootfs/tmp
          INPUT_DOCKER_TAG_KEYS: '[''DICE_*'', ''N?_DICE_*'', ''EDAS_*'', ''ADDON_ID'',
            ''N?_ADDON_ID'', ''TERMINUS_KEY'', ''TERMINUS_DEFINE_TAG'', ''MESOS_TASK_ID'',
            ''POD_IP'', ''io.kubernetes.pod.name'', ''io.kubernetes.pod.namespace'', ''io.kubernetes.pod.uid'']'
          INPUT_METASERVER_FIELD_KEYS: '[''DICE_*'', ''N?_DICE_*'', ''EDAS_*'', ''TERMINUS_DEFINE_TAG'',
            ''POD_IP'', ''io.kubernetes.pod.name'', ''io.kubernetes.pod.namespace'']'
          SADC_PATH: /usr/lib64/sa/sadc
          SADF_PATH: /usr/bin/sadf
          TELEGRAF_PPROF_PORT: "6962"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.5
          max_mem: 512
          network:
            mode: host
        binds:
          - /:/rootfs:ro
          - /tmp:/rootfs/tmp:rw
          - /run/udev:/run/udev:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
            PRIVILEGED: "true"
          workload: per_node
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
      telegraf-app:
        image: registry.erda.cloud/erda/terminus/telegraf:4.0-20210801-ee49757
        ports:
          - port: 8091
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          TELEGRAF_CONFIG: telegraf-app
          TELEGRAF_PPROF_PORT: "6963"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 0.5
          max_mem: 512
          network:
            mode: host
        binds:
          - /:/rootfs:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
            PRIVILEGED: "true"
          workload: per_node
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
      telegraf-platform:
        image: registry.erda.cloud/erda/terminus/telegraf:4.0-20210801-ee49757
        ports:
          - port: 8092
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 8094
            protocol: UDP
            l4_protocol: UDP
            expose: false
            default: false
          - port: 8095
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 6963
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
          - port: 7180
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CASSANDRA_EXPORTER_JMX_ADDR: addon-cassandra-exporter-jmx.default.svc.cluster.local
          CASSANDRA_JOLOKIA_PORT: "8778"
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          HOST_ETC: /rootfs/etc
          HOST_MOUNT_PREFIX: /rootfs
          HOST_PROC: /rootfs/proc
          HOST_SYS: /rootfs/sys
          HPROF_OUTPUT_PATH: /rootfs/tmp
          KAFKA_JOLOKIA_PORT: "8778"
          TELEGRAF_CONFIG: platform.alone
          TELEGRAF_PPROF_PORT: "6964"
          TERMINUS_LOG_COLLECT: "false"
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 1536
          network:
            mode: container
        binds:
          - /:/rootfs:ro
          - /netdata/dice-ops/dice-config/certificates:/netdata/dice-ops/dice-config/certificates:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
            PRIVILEGED: "true"
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
    addons:
      infos:
        plan: custom:basic
        options:
          version: 1.0.0
    values: { }
  spotFilebeat:
    version: "2.0"
    meta:
      ERDA_COMPONENT: ""
    envs: { }
    services:
      filebeat:
        image: registry.erda.cloud/erda/terminus/filebeat:4.0.0-20210801-02ea6b8
        envs:
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          DOCKER_SOCK_PATH: unix:///rootfs/var/run/docker.sock
        resources:
          cpu: 0.1
          mem: 128
          max_cpu: 1
          max_mem: 512
          network:
            mode: container
        binds:
          - /var/lib/docker/containers:/var/lib/docker/containers:ro
          - /data/kube-apiserver/audit-logs:/data/kube-apiserver/audit-logs:ro
          - /data/spot-v2/filebeat:/data/spot/filebeat:rw
          - /var/run:/rootfs/var/run:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
          workload: per_node
        health_check:
          http: { }
          exec:
            cmd: ps aux | grep filebeat || exit 1
            duration: 120
    addons:
      infos:
        plan: custom:basic
        options:
          version: 1.0.0
    values: { }

