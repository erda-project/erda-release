{{- if ne .Values.global.size "demo" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: erda-kafka-1
    erda/addon: erda-kafka
  name: erda-kafka-1
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: erda-kafka-1
  serviceName: erda-kafka-1
  template:
    metadata:
      labels:
        app: erda-kafka-1
        erda/addon: erda-kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "dice/platform"
                  operator: Exists
                - key: "dice/kafka"
                  operator: Exists
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: erda/addon
                      operator: In
                      values:
                      - erda-zookeeper
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: erda/addon
                    operator: In
                    values:
                    - erda-kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: erda-kafka-1
          image: {{ .Values.global.image.repository }}/addon-kafka:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
          - containerPort: 9092
            protocol: TCP
          - containerPort: 9988
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          env:
          - name: DICE_PLATFORM_ADDON
            value: erda-kafka-1
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: erda-kafka-1.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}
          - name: KAFKA_ADVERTISED_PORT
            value: '9092'
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_DELETE_TOPIC_ENABLE
            value: 'true'
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: '10000'
          - name: KAFKA_LOG_CLEANER_ENABLE
            value: 'true'
          - name: KAFKA_LOG_DIRS
            value: "/data"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: '60000'
          - name: KAFKA_LOG_RETENTION_HOURS
            value: '2'
          - name: KAFKA_LOG_SEGMENT_BYTES
            value: '536870912'
          - name: KAFKA_MESSAGE_MAX_BYTES
            value: '20000000'
          - name: KAFKA_NUM_PARTITIONS
            value: '9'
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_REBALANCE_BACKOFF_MS
            value: '2000'
          - name: KAFKA_REBALANCE_MAX_RETRIES
            value: '10'
          - name: KAFKA_REPLICA_FETCH_MAX_BYTES
            value: '20000000'
          - name: KAFKA_ZOOKEEPER_CONNECT
            value:  erda-zookeeper-1.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-2.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-3.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181
          - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
            value: '10000'
          - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
            value: '5000'
          - name: JMX_PORT
            value: '9988'
          - name: KAFKA_JMX_OPTS
            value: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9988 -javaagent:/opt/kafka/agent/jolokia-jvm-1.6.2-agent.jar=port=8778,host=0.0.0.0'
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: KAFKA_HEAP_OPTS
            value: {{ .Values.javaOpts | default "-Xmx6144m -Xms6144m" | quote  }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "2" | quote }}
              memory: {{ .Values.resources.requests.memory | default "4Gi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "4" | quote }}
              memory: {{ .Values.resources.limits.memory | default "8Gi" | quote }}
          volumeMounts:
          - name: erda-kafka-1
            mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 45
            successThreshold: 1
            failureThreshold: 9
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: erda-kafka-1
      name: erda-kafka-1
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.capacity | default "100Gi" }}
      storageClassName: {{ .Values.storageClassName | default "dice-local-volume" }}
      volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: erda-kafka-2
    erda/addon: erda-kafka
  name: erda-kafka-2
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: erda-kafka-2
  serviceName: erda-kafka-2
  template:
    metadata:
      labels:
        app: erda-kafka-2
        erda/addon: erda-kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "dice/platform"
                  operator: Exists
                - key: "dice/kafka"
                  operator: Exists
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: erda/addon
                    operator: In
                    values:
                    - erda-zookeeper
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: erda/addon
                  operator: In
                  values:
                  - erda-kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: erda-kafka-2
          image: {{ .Values.global.image.repository }}/addon-kafka:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
          - containerPort: 9092
            protocol: TCP
          - containerPort: 9988
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          env:
          - name: DICE_PLATFORM_ADDON
            value: erda-kafka-2
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: erda-kafka-2.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}
          - name: KAFKA_ADVERTISED_PORT
            value: '9092'
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_DELETE_TOPIC_ENABLE
            value: 'true'
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: '10000'
          - name: KAFKA_LOG_CLEANER_ENABLE
            value: 'true'
          - name: KAFKA_LOG_DIRS
            value: "/data"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: '60000'
          - name: KAFKA_LOG_RETENTION_HOURS
            value: '2'
          - name: KAFKA_LOG_SEGMENT_BYTES
            value: '536870912'
          - name: KAFKA_MESSAGE_MAX_BYTES
            value: '20000000'
          - name: KAFKA_NUM_PARTITIONS
            value: '9'
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_REBALANCE_BACKOFF_MS
            value: '2000'
          - name: KAFKA_REBALANCE_MAX_RETRIES
            value: '10'
          - name: KAFKA_REPLICA_FETCH_MAX_BYTES
            value: '20000000'
          - name: KAFKA_ZOOKEEPER_CONNECT
            value:  erda-zookeeper-1.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-2.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-3.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181
          - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
            value: '10000'
          - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
            value: '5000'
          - name: JMX_PORT
            value: '9988'
          - name: KAFKA_JMX_OPTS
            value: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9988 -javaagent:/opt/kafka/agent/jolokia-jvm-1.6.2-agent.jar=port=8778,host=0.0.0.0'
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: KAFKA_HEAP_OPTS
            value: {{ .Values.javaOpts | default "-Xmx6144m -Xms6144m" | quote  }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "2" | quote }}
              memory: {{ .Values.resources.requests.memory | default "4Gi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "4" | quote }}
              memory: {{ .Values.resources.limits.memory | default "8Gi" | quote }}
          volumeMounts:
          - name: erda-kafka-2
            mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 45
            successThreshold: 1
            failureThreshold: 9
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: erda-kafka-2
      name: erda-kafka-2
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.capacity | default "100Gi" }}
      storageClassName: {{ .Values.storageClassName | default "dice-local-volume" }}
      volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: erda-kafka-3
    erda/addon: erda-kafka
  name: erda-kafka-3
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: erda-kafka-3
  serviceName: erda-kafka-3
  template:
    metadata:
      labels:
        app: erda-kafka-3
        erda/addon: erda-kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "dice/platform"
                  operator: Exists
                - key: "dice/kafka"
                  operator: Exists
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: erda/addon
                    operator: In
                    values:
                    - erda-zookeeper
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: erda/addon
                  operator: In
                  values:
                  - erda-kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: erda-kafka-3
          image: {{ .Values.global.image.repository }}/addon-kafka:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
          - containerPort: 9092
            protocol: TCP
          - containerPort: 9988
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          env:
          - name: DICE_PLATFORM_ADDON
            value: erda-kafka-3
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: erda-kafka-3.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}
          - name: KAFKA_ADVERTISED_PORT
            value: '9092'
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_DELETE_TOPIC_ENABLE
            value: 'true'
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: '10000'
          - name: KAFKA_LOG_CLEANER_ENABLE
            value: 'true'
          - name: KAFKA_LOG_DIRS
            value: "/data"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: '60000'
          - name: KAFKA_LOG_RETENTION_HOURS
            value: '2'
          - name: KAFKA_LOG_SEGMENT_BYTES
            value: '536870912'
          - name: KAFKA_MESSAGE_MAX_BYTES
            value: '20000000'
          - name: KAFKA_NUM_PARTITIONS
            value: '9'
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_REBALANCE_BACKOFF_MS
            value: '2000'
          - name: KAFKA_REBALANCE_MAX_RETRIES
            value: '10'
          - name: KAFKA_REPLICA_FETCH_MAX_BYTES
            value: '20000000'
          - name: KAFKA_ZOOKEEPER_CONNECT
            value:  erda-zookeeper-1.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-2.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181,erda-zookeeper-3.{{ .Release.Namespace }}.svc.{{ .Values.global.kubernetes.serviceDNSDomain }}:2181
          - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
            value: '10000'
          - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
            value: '5000'
          - name: JMX_PORT
            value: '9988'
          - name: KAFKA_JMX_OPTS
            value: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9988 -javaagent:/opt/kafka/agent/jolokia-jvm-1.6.2-agent.jar=port=8778,host=0.0.0.0'
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: KAFKA_HEAP_OPTS
            value: {{ .Values.javaOpts | default "-Xmx6144m -Xms6144m" | quote  }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "2" | quote }}
              memory: {{ .Values.resources.requests.memory | default "4Gi" | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu |  default "4" | quote }}
              memory: {{ .Values.resources.limits.memory | default "8Gi" | quote }}
          volumeMounts:
          - name: erda-kafka-3
            mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 45
            successThreshold: 1
            failureThreshold: 9
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: erda-kafka-3
      name: erda-kafka-3
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.capacity | default "100Gi" }}
      storageClassName: {{ .Values.storageClassName | default "dice-local-volume" }}
      volumeMode: Filesystem
---
kind: Service
apiVersion: v1
metadata:
  name: erda-kafka-1
  namespace: {{ .Release.Namespace }}
spec:
  clusterIP: None
  ports:
  - name: erda-kafka-tcp-9092
    protocol: TCP
    port: 9092
  - name: erda-kafka-tcp-9988
    protocol: TCP
    port: 9988
  - name: erda-kafka-tcp-8778
    protocol: TCP
    port: 8778
  selector:
    app: erda-kafka-1
---
kind: Service
apiVersion: v1
metadata:
  name: erda-kafka-2
  namespace: {{ .Release.Namespace }}
spec:
  clusterIP: None
  ports:
  - name: erda-kafka-tcp-9092
    protocol: TCP
    port: 9092
  - name: erda-kafka-tcp-9988
    protocol: TCP
    port: 9988
  - name: erda-kafka-tcp-8778
    protocol: TCP
    port: 8778
  selector:
    app: erda-kafka-2
---
kind: Service
apiVersion: v1
metadata:
  name: erda-kafka-3
  namespace: {{ .Release.Namespace }}
spec:
  clusterIP: None
  ports:
  - name: erda-kafka-tcp-9092
    protocol: TCP
    port: 9092
  - name: erda-kafka-tcp-9988
    protocol: TCP
    port: 9988
  - name: erda-kafka-tcp-8778
    protocol: TCP
    port: 8778
  selector:
    app: erda-kafka-3
{{- end }}
