kind: Deployment
apiVersion: apps/v1
metadata:
  name: erda-registry
  namespace: {{ .Values.global.namespace | default "erda-system" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      dice/addon: erda-registry
  template:
    metadata:
      labels:
        dice/addon: erda-registry
    spec:
      volumes:
        - name: bind1
          persistentVolumeClaim:
            claimName: data-erda-registry-pvc
      containers:
        - name: erda-registry
          image:
            {{ .Values.global.image.repository }}/addon-registry:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
            - containerPort: 5050
              protocol: TCP
          env:
            - name: DICE_ADDON
              value: erda-registry
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: 'true'
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: bind1
              mountPath: /var/lib/registry
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 9
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if eq .Values.networkMode "host" }}
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - {{ .Values.hostNode }}
      {{- end }}
      tolerations:
        - operator: Exists
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
